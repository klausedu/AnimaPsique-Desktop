# Copyright 2020 Signal Messenger, LLC
# SPDX-License-Identifier: AGPL-3.0-only

name: CI
on:
  push:
    branches:
      - development
      - main
      - '[0-9]+.[0-9]+.x'
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - run: lsb_release -a
    - run: uname -a
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16.17.1'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}

    - name: Restore cached .eslintcache and tsconfig.tsbuildinfo
      uses: actions/cache/restore@v3
      id: cache-lint
      with:
        path: |
          .eslintcache
          tsconfig.tsbuildinfo
        key: lint-${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**', '.eslintrc.js', '.eslint/**', 'tsconfig.json') }}

    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile
      env:
        NPM_CONFIG_LOGLEVEL: verbose

    - run: yarn generate
    - run: yarn lint
    - run: yarn lint-deps
    - run: yarn lint-license-comments
    - run: git diff --exit-code

    - name: Update cached .eslintcache and tsconfig.tsbuildinfo
      uses: actions/cache/save@v3
      if: github.ref == 'refs/heads/main'
      with:
        path: |
          .eslintcache
          tsconfig.tsbuildinfo
        key: ${{ steps.cache-lint.outputs.cache-primary-key }}

 
  windows:
    needs: lint
    runs-on: self-hosted
    timeout-minutes: 30

    steps:
    - run: systeminfo
    - run: git config --global core.autocrlf false
    - run: git config --global core.eol lf
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: '16.17.1'
    - run: npm install -g yarn@1.22.10

    - name: Cache Desktop node_modules
      id: cache-desktop-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('package.json', 'yarn.lock', 'patches/**') }}
    - name: Install Desktop node_modules
      if: steps.cache-desktop-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile
      env:
        NPM_CONFIG_LOGLEVEL: verbose

    - run: yarn generate
    - run: yarn test-node
    - run: copy package.json temp.json
    - run: del package.json
    - run: type temp.json | findstr /v certificateSubjectName | findstr /v certificateSha1 > package.json
    - run: yarn prepare-beta-build

    - name: Create bundle
      run: yarn build:esbuild:prod

    - name: Build with NSIS
      run: yarn build:release
      if: github.ref == 'refs/heads/main'
      env:
        DISABLE_INSPECT_FUSE: on
    - name: Build without NSIS
      run: yarn build:release --win dir
      if: github.ref != 'refs/heads/main'
      env:
        DISABLE_INSPECT_FUSE: on

    - run: yarn test-electron
      timeout-minutes: 5
    - run: yarn test-release
      env:
        SIGNAL_ENV: production

